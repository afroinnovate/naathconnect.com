name: Rollback Deployment

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version/Tag to rollback to (e.g., v2025.9.1)'
        required: true
        type: string

permissions:
  contents: write
  pages: write
  actions: read

jobs:
  validate-and-rollback:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository üõéÔ∏è
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate Tag Exists üè∑Ô∏è
        id: validate
        run: |
          TAG="${{ github.event.inputs.version }}"
          
          # Remove 'v' prefix if present for consistency
          if [[ $TAG == v* ]]; then
            TAG_CLEAN=${TAG#v}
            TAG_WITH_V=$TAG
          else
            TAG_CLEAN=$TAG
            TAG_WITH_V=v$TAG
          fi
          
          echo "tag_clean=$TAG_CLEAN" >> $GITHUB_OUTPUT
          echo "tag_with_v=$TAG_WITH_V" >> $GITHUB_OUTPUT
          
          # Check if tag exists
          if ! git rev-parse "$TAG_WITH_V" >/dev/null 2>&1; then
            echo "‚ùå Error: Tag '$TAG_WITH_V' does not exist"
            echo "Available recent tags:"
            git tag -l --sort=-version:refname | head -10
            exit 1
          fi
          
          echo "‚úÖ Tag '$TAG_WITH_V' found and valid"

      - name: Checkout Target Version üì•
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.validate.outputs.tag_with_v }}

      - name: Get Rollback Information üìã
        id: info
        run: |
          TAG="${{ steps.validate.outputs.tag_with_v }}"
          
          # Get commit info for the tag
          COMMIT_SHA=$(git rev-parse $TAG)
          COMMIT_DATE=$(git log -1 --format=%ci $TAG)
          COMMIT_MESSAGE=$(git log -1 --format=%s $TAG)
          
          echo "commit_sha=$COMMIT_SHA" >> $GITHUB_OUTPUT
          echo "commit_date=$COMMIT_DATE" >> $GITHUB_OUTPUT
          echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          
          echo "Rolling back to:"
          echo "  Tag: $TAG"
          echo "  Commit: $COMMIT_SHA"
          echo "  Date: $COMMIT_DATE"
          echo "  Message: $COMMIT_MESSAGE"

      - name: Force Clean gh-pages Branch üßπ
        run: |
          echo "üóëÔ∏è Performing clean rollback deployment..."
          
          git config user.name "GitHub Actions Rollback"
          git config user.email "actions@github.com"
          
          # Create orphan branch for clean rollback
          git checkout --orphan gh-pages-rollback
          git rm -rf .
          echo "# Rollback in Progress" > README.md
          git add README.md
          git commit -m "üîÑ Rollback preparation"
          
          # Force push to replace gh-pages
          git push origin gh-pages-rollback:gh-pages --force
          
          # Switch back to target version
          git checkout ${{ steps.validate.outputs.tag_with_v }}
          git branch -D gh-pages-rollback

      - name: Deploy Rollback Version üîÑ
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          branch: gh-pages
          folder: .
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: true
          commit-message: |
            üîÑ ROLLBACK to ${{ steps.validate.outputs.tag_with_v }}
            
            Rolling back from: ${{ github.sha }}
            Rolling back to: ${{ steps.info.outputs.commit_sha }}
            
            Original commit: ${{ steps.info.outputs.commit_message }}
            Rollback date: $(date '+%Y-%m-%d %H:%M:%S UTC')
            Initiated by: ${{ github.actor }}

      - name: Rollback Summary üìä
        run: |
          echo "## üîÑ Rollback Completed Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Rolled back to**: ${{ steps.validate.outputs.tag_with_v }}" >> $GITHUB_STEP_SUMMARY
          echo "**Target commit**: ${{ steps.info.outputs.commit_sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Original date**: ${{ steps.info.outputs.commit_date }}" >> $GITHUB_STEP_SUMMARY
          echo "**Initiated by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Rollback time**: $(date '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üåê **Live Site**: [naathconnect.com](https://naathconnect.com)" >> $GITHUB_STEP_SUMMARY
          echo "üîó **GitHub Pages**: [afroinnovate.github.io/naathconnect.com](https://afroinnovate.github.io/naathconnect.com)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "‚ö†Ô∏è **Important**: Changes may take 5-10 minutes to appear due to CDN caching." >> $GITHUB_STEP_SUMMARY
          echo "üí° **Tip**: Use cache-busting URL parameters to see changes immediately." >> $GITHUB_STEP_SUMMARY

      - name: Create Rollback Record üìù
        run: |
          echo "Recording rollback in git history..."
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # Create rollback marker (optional, for tracking)
          git tag -a "rollback-$(date +%Y%m%d-%H%M%S)" -m "Rollback to ${{ steps.validate.outputs.tag_with_v }} initiated by ${{ github.actor }}"
          git push origin --tags